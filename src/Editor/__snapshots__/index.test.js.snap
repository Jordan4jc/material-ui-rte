// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Editor Should render alignment control 1`] = `
<WithStyles(ForwardRef(Paper))>
  <WithStyles(ForwardRef(Toolbar))>
    <BlockStyleControl
      onChange={[Function]}
    />
    <WithStyles(InlineStyleControls)
      editorState={
        EditorState {
          "_immutable": Immutable.Record {
            "allowUndo": true,
            "currentContent": Immutable.Record {
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "blockMap": Immutable.OrderedMap {
                "65qm4": Immutable.Record {
                  "key": "65qm4",
                  "type": "unstyled",
                  "text": "",
                  "characterList": Immutable.List [],
                  "depth": 0,
                  "data": Immutable.Map {},
                },
              },
              "selectionBefore": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "selectionAfter": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
            },
            "decorator": null,
            "directionMap": Immutable.OrderedMap {
              "65qm4": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Immutable.Stack [],
            "selection": Immutable.Record {
              "anchorKey": "65qm4",
              "anchorOffset": 0,
              "focusKey": "65qm4",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "treeMap": Immutable.OrderedMap {
              "65qm4": Immutable.List [
                Immutable.Record {
                  "start": 0,
                  "end": 0,
                  "decoratorKey": null,
                  "leaves": Immutable.List [
                    Immutable.Record {
                      "start": 0,
                      "end": 0,
                    },
                  ],
                },
              ],
            },
            "undoStack": Immutable.Stack [],
          },
        }
      }
      onChange={[Function]}
    />
    <WithStyles(ListControls)
      editorState={
        EditorState {
          "_immutable": Immutable.Record {
            "allowUndo": true,
            "currentContent": Immutable.Record {
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "blockMap": Immutable.OrderedMap {
                "65qm4": Immutable.Record {
                  "key": "65qm4",
                  "type": "unstyled",
                  "text": "",
                  "characterList": Immutable.List [],
                  "depth": 0,
                  "data": Immutable.Map {},
                },
              },
              "selectionBefore": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "selectionAfter": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
            },
            "decorator": null,
            "directionMap": Immutable.OrderedMap {
              "65qm4": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Immutable.Stack [],
            "selection": Immutable.Record {
              "anchorKey": "65qm4",
              "anchorOffset": 0,
              "focusKey": "65qm4",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "treeMap": Immutable.OrderedMap {
              "65qm4": Immutable.List [
                Immutable.Record {
                  "start": 0,
                  "end": 0,
                  "decoratorKey": null,
                  "leaves": Immutable.List [
                    Immutable.Record {
                      "start": 0,
                      "end": 0,
                    },
                  ],
                },
              ],
            },
            "undoStack": Immutable.Stack [],
          },
        }
      }
      onChange={[Function]}
    />
    <WithStyles(InlineAlignmentControls)
      editorState={
        EditorState {
          "_immutable": Immutable.Record {
            "allowUndo": true,
            "currentContent": Immutable.Record {
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "blockMap": Immutable.OrderedMap {
                "65qm4": Immutable.Record {
                  "key": "65qm4",
                  "type": "unstyled",
                  "text": "",
                  "characterList": Immutable.List [],
                  "depth": 0,
                  "data": Immutable.Map {},
                },
              },
              "selectionBefore": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "selectionAfter": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
            },
            "decorator": null,
            "directionMap": Immutable.OrderedMap {
              "65qm4": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Immutable.Stack [],
            "selection": Immutable.Record {
              "anchorKey": "65qm4",
              "anchorOffset": 0,
              "focusKey": "65qm4",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "treeMap": Immutable.OrderedMap {
              "65qm4": Immutable.List [
                Immutable.Record {
                  "start": 0,
                  "end": 0,
                  "decoratorKey": null,
                  "leaves": Immutable.List [
                    Immutable.Record {
                      "start": 0,
                      "end": 0,
                    },
                  ],
                },
              ],
            },
            "undoStack": Immutable.Stack [],
          },
        }
      }
      onChange={[Function]}
    />
  </WithStyles(ForwardRef(Toolbar))>
  <div
    onClick={[Function]}
  >
    <PluginEditor
      customStyleMap={
        Object {
          "ALIGN-CENTER": Object {
            "display": "block",
            "textAlign": "center",
          },
          "ALIGN-LEFT": Object {
            "display": "block",
            "textAlign": "left",
          },
          "ALIGN-RIGHT": Object {
            "display": "block",
            "textAlign": "right",
          },
        }
      }
      decorators={Array []}
      defaultBlockRenderMap={true}
      defaultKeyBindings={true}
      defaultKeyCommands={true}
      editorState={
        EditorState {
          "_immutable": Immutable.Record {
            "allowUndo": true,
            "currentContent": Immutable.Record {
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "blockMap": Immutable.OrderedMap {
                "65qm4": Immutable.Record {
                  "key": "65qm4",
                  "type": "unstyled",
                  "text": "",
                  "characterList": Immutable.List [],
                  "depth": 0,
                  "data": Immutable.Map {},
                },
              },
              "selectionBefore": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "selectionAfter": Immutable.Record {
                "anchorKey": "65qm4",
                "anchorOffset": 0,
                "focusKey": "65qm4",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
            },
            "decorator": null,
            "directionMap": Immutable.OrderedMap {
              "65qm4": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Immutable.Stack [],
            "selection": Immutable.Record {
              "anchorKey": "65qm4",
              "anchorOffset": 0,
              "focusKey": "65qm4",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "treeMap": Immutable.OrderedMap {
              "65qm4": Immutable.List [
                Immutable.Record {
                  "start": 0,
                  "end": 0,
                  "decoratorKey": null,
                  "leaves": Immutable.List [
                    Immutable.Record {
                      "start": 0,
                      "end": 0,
                    },
                  ],
                },
              ],
            },
            "undoStack": Immutable.Stack [],
          },
        }
      }
      onChange={[Function]}
      plugins={
        Array [
          Object {
            "handleReturn": [Function],
          },
          Object {
            "DividerButton": [Function],
            "addDivider": [Function],
            "blockRendererFn": [Function],
          },
        ]
      }
    />
  </div>
</WithStyles(ForwardRef(Paper))>
`;
